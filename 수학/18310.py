# https://www.acmicpc.net/problem/18310
# 안테나

n = int(input())
houses = list(map(int, input().split()))
houses.sort()

print(houses[(n-1)//2])

'''
안테나의 위치를 옮길 때, 결국 최솟값을 찾기 위해서는 현재 안테나의 거리와 모든 집의 차이의 합이 최소가 되어야한다.

모든 집과의 거리를 더했을 때 최소가 되기 위해서는 중간값을 구해주면된다.

예를 들어 1 2 3 4 5 에 집이 있다고 하자.
1에 안테나가 있는 경우 -> 0 + 1 + 2 + 3 + 4 = 10
2에 안테나가 있는 경우 -> 1 + 0 + 1 + 2 + 3 = 7
3에 안테나가 있는 경우 -> 1 + 2 + 0 + 1 + 2 = 6
4에 안테나가 있는 경우 -> 3 + 2 + 1 + 0 + 1 = 7
5에 안테나가 있는 경우 -> 4 + 3 + 2 + 1 + 0 = 10

자기자신에 안테나가 위치한 경우 거리는 0이다. 
그리고 0을 기준으로 현재위치보다 앞에 있는 집들의 값과 뒤에 있는 값의 변화가 일어난다. 
0에서 멀어질수록 큰 값을 더해야하고, 0과 가까울 수록 작은 값만 더하면 된다. (안테나의 거리와 집이 멀어지면 당연히 안테나와 집의 거리차가 커지기 때문)
그렇다면, 0을 가운데 놓고 최대한 작은 값들을 더해주면 최솟값을 더할 수 있다.
0을 가운데에 놓기 위해서는 0이 중간값이면 된다.

즉, 안테나를 중간값에 놓으면 최솟값을 구할 수 있다.
'''